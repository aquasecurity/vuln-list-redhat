{
  "document": {
    "category": "csaf_vex",
    "csaf_version": "2.0",
    "distribution": {
      "text": "Copyright Â© Red Hat, Inc. All rights reserved.",
      "tlp": {
        "label": "WHITE",
        "url": "https://www.first.org/tlp/"
      }
    },
    "lang": "en",
    "notes": [
      {
        "category": "legal_disclaimer",
        "text": "This content is licensed under the Creative Commons Attribution 4.0 International License (https://creativecommons.org/licenses/by/4.0/). If you distribute this content, or a modified version of it, you must provide attribution to Red Hat Inc. and provide a link to the original.",
        "title": "Terms of Use"
      }
    ],
    "publisher": {
      "category": "vendor",
      "contact_details": "https://access.redhat.com/security/team/contact/",
      "issuing_authority": "Red Hat Product Security is responsible for vulnerability handling across all Red Hat products and services.",
      "name": "Red Hat Product Security",
      "namespace": "https://www.redhat.com"
    },
    "references": [
      {
        "category": "self",
        "summary": "Canonical URL",
        "url": "https://security.access.redhat.com/data/csaf/v2/vex/2022/cve-2022-36078.json"
      }
    ],
    "title": "Slice Memory Allocation with Excessive Size Value in binary",
    "tracking": {
      "current_release_date": "2025-02-05T22:42:41+00:00",
      "generator": {
        "date": "2025-02-05T22:42:41+00:00",
        "engine": {
          "name": "Red Hat SDEngine",
          "version": "4.3.0"
        }
      },
      "id": "CVE-2022-36078",
      "initial_release_date": "2022-01-01T00:00:00+00:00",
      "revision_history": [
        {
          "date": "2022-01-01T00:00:00+00:00",
          "number": "1",
          "summary": "Initial version"
        },
        {
          "date": "2024-08-03T09:52:00.489000+00:00",
          "number": "2",
          "summary": "Current version"
        },
        {
          "date": "2025-02-05T22:42:41+00:00",
          "number": "3",
          "summary": "Last generated version"
        }
      ],
      "status": "final",
      "version": "3"
    }
  },
  "product_tree": {
    "branches": [
      {
        "category": "vendor",
        "name": "Red Hat",
        "product": {
          "name": "All currently supported Red Hat products",
          "product_id": "red_hat_products",
          "product_identification_helper": {
            "cpe": "cpe:/a:redhat"
          }
        }
      }
    ]
  },
  "vulnerabilities": [
    {
      "cve": "CVE-2022-36078",
      "flags": [
        {
          "label": "component_not_present",
          "product_ids": [
            "red_hat_products"
          ]
        }
      ],
      "notes": [
        {
          "category": "description",
          "text": "Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(\u0026val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(\u0026val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.",
          "title": "Vulnerability description"
        },
        {
          "category": "summary",
          "text": "Slice Memory Allocation with Excessive Size Value in binary",
          "title": "Vulnerability summary"
        },
        {
          "category": "other",
          "text": "Red Hat Product Security has determined that this vulnerability does not affect any currently supported Red Hat product. This assessment may evolve based on further analysis and discovery. For more information about this vulnerability and the products it affects, please see the linked references.",
          "title": "Statement"
        }
      ],
      "product_status": {
        "known_not_affected": [
          "red_hat_products"
        ]
      },
      "references": [
        {
          "category": "self",
          "summary": "Canonical URL",
          "url": "https://access.redhat.com/security/cve/CVE-2022-36078"
        },
        {
          "category": "external",
          "summary": "https://www.cve.org/CVERecord?id=CVE-2022-36078",
          "url": "https://www.cve.org/CVERecord?id=CVE-2022-36078"
        },
        {
          "category": "external",
          "summary": "https://nvd.nist.gov/vuln/detail/CVE-2022-36078",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36078"
        },
        {
          "category": "external",
          "summary": "https://github.com/gagliardetto/binary/pull/7",
          "url": "https://github.com/gagliardetto/binary/pull/7"
        },
        {
          "category": "external",
          "summary": "https://github.com/gagliardetto/binary/releases/tag/v0.7.1",
          "url": "https://github.com/gagliardetto/binary/releases/tag/v0.7.1"
        },
        {
          "category": "external",
          "summary": "https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88",
          "url": "https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88"
        }
      ],
      "title": "Slice Memory Allocation with Excessive Size Value in binary"
    }
  ]
}