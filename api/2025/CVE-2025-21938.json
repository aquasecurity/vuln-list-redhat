{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-04-01T00:00:00Z",
  "bugzilla": {
    "description": "kernel: mptcp: fix 'scheduling while atomic' in mptcp_pm_nl_append_new_local_addr",
    "id": "2356668",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2356668"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2025-21938",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nmptcp: fix 'scheduling while atomic' in mptcp_pm_nl_append_new_local_addr\nIf multiple connection requests attempt to create an implicit mptcp\nendpoint in parallel, more than one caller may end up in\nmptcp_pm_nl_append_new_local_addr because none found the address in\nlocal_addr_list during their call to mptcp_pm_nl_get_local_id.  In this\ncase, the concurrent new_local_addr calls may delete the address entry\ncreated by the previous caller.  These deletes use synchronize_rcu, but\nthis is not permitted in some of the contexts where this function may be\ncalled.  During packet recv, the caller may be in a rcu read critical\nsection and have preemption disabled.\nAn example stack:\nBUG: scheduling while atomic: swapper/2/0/0x00000302\nCall Trace:\n\u003cIRQ\u003e\ndump_stack_lvl (lib/dump_stack.c:117 (discriminator 1))\ndump_stack (lib/dump_stack.c:124)\n__schedule_bug (kernel/sched/core.c:5943)\nschedule_debug.constprop.0 (arch/x86/include/asm/preempt.h:33 kernel/sched/core.c:5970)\n__schedule (arch/x86/include/asm/jump_label.h:27 include/linux/jump_label.h:207 kernel/sched/features.h:29 kernel/sched/core.c:6621)\nschedule (arch/x86/include/asm/preempt.h:84 kernel/sched/core.c:6804 kernel/sched/core.c:6818)\nschedule_timeout (kernel/time/timer.c:2160)\nwait_for_completion (kernel/sched/completion.c:96 kernel/sched/completion.c:116 kernel/sched/completion.c:127 kernel/sched/completion.c:148)\n__wait_rcu_gp (include/linux/rcupdate.h:311 kernel/rcu/update.c:444)\nsynchronize_rcu (kernel/rcu/tree.c:3609)\nmptcp_pm_nl_append_new_local_addr (net/mptcp/pm_netlink.c:966 net/mptcp/pm_netlink.c:1061)\nmptcp_pm_nl_get_local_id (net/mptcp/pm_netlink.c:1164)\nmptcp_pm_get_local_id (net/mptcp/pm.c:420)\nsubflow_check_req (net/mptcp/subflow.c:98 net/mptcp/subflow.c:213)\nsubflow_v4_route_req (net/mptcp/subflow.c:305)\ntcp_conn_request (net/ipv4/tcp_input.c:7216)\nsubflow_v4_conn_request (net/mptcp/subflow.c:651)\ntcp_rcv_state_process (net/ipv4/tcp_input.c:6709)\ntcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1934)\ntcp_v4_rcv (net/ipv4/tcp_ipv4.c:2334)\nip_protocol_deliver_rcu (net/ipv4/ip_input.c:205 (discriminator 1))\nip_local_deliver_finish (include/linux/rcupdate.h:813 net/ipv4/ip_input.c:234)\nip_local_deliver (include/linux/netfilter.h:314 include/linux/netfilter.h:308 net/ipv4/ip_input.c:254)\nip_sublist_rcv_finish (include/net/dst.h:461 net/ipv4/ip_input.c:580)\nip_sublist_rcv (net/ipv4/ip_input.c:640)\nip_list_rcv (net/ipv4/ip_input.c:675)\n__netif_receive_skb_list_core (net/core/dev.c:5583 net/core/dev.c:5631)\nnetif_receive_skb_list_internal (net/core/dev.c:5685 net/core/dev.c:5774)\nnapi_complete_done (include/linux/list.h:37 include/net/gro.h:449 include/net/gro.h:444 net/core/dev.c:6114)\nigb_poll (drivers/net/ethernet/intel/igb/igb_main.c:8244) igb\n__napi_poll (net/core/dev.c:6582)\nnet_rx_action (net/core/dev.c:6653 net/core/dev.c:6787)\nhandle_softirqs (kernel/softirq.c:553)\n__irq_exit_rcu (kernel/softirq.c:588 kernel/softirq.c:427 kernel/softirq.c:636)\nirq_exit_rcu (kernel/softirq.c:651)\ncommon_interrupt (arch/x86/kernel/irq.c:247 (discriminator 14))\n\u003c/IRQ\u003e\nThis problem seems particularly prevalent if the user advertises an\nendpoint that has a different external vs internal address.  In the case\nwhere the external address is advertised and multiple connections\nalready exist, multiple subflow SYNs arrive in parallel which tends to\ntrigger the race during creation of the first local_addr_list entries\nwhich have the internal address instead.\nFix by skipping the replacement of an existing implicit local address if\ncalled via mptcp_pm_nl_get_local_id."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2025-21938\nhttps://nvd.nist.gov/vuln/detail/CVE-2025-21938\nhttps://lore.kernel.org/linux-cve-announce/2025040134-CVE-2025-21938-3b75@gregkh/T"
  ]
}