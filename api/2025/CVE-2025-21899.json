{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-04-01T00:00:00Z",
  "bugzilla": {
    "description": "kernel: tracing: Fix bad hist from corrupting named_triggers list",
    "id": "2356628",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2356628"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2025-21899",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\ntracing: Fix bad hist from corrupting named_triggers list\nThe following commands causes a crash:\n~# cd /sys/kernel/tracing/events/rcu/rcu_callback\n~# echo 'hist:name=bad:keys=common_pid:onmax(bogus).save(common_pid)' \u003e trigger\nbash: echo: write error: Invalid argument\n~# echo 'hist:name=bad:keys=common_pid' \u003e trigger\nBecause the following occurs:\nevent_trigger_write() {\ntrigger_process_regex() {\nevent_hist_trigger_parse() {\ndata = event_trigger_alloc(..);\nevent_trigger_register(.., data) {\ncmd_ops-\u003ereg(.., data, ..) [hist_register_trigger()] {\ndata-\u003eops-\u003einit() [event_hist_trigger_init()] {\nsave_named_trigger(name, data) {\nlist_add(\u0026data-\u003enamed_list, \u0026named_triggers);\n}\n}\n}\n}\nret = create_actions(); (return -EINVAL)\nif (ret)\ngoto out_unreg;\n[..]\nret = hist_trigger_enable(data, ...) {\nlist_add_tail_rcu(\u0026data-\u003elist, \u0026file-\u003etriggers); \u003c\u003c\u003c---- SKIPPED!!! (this is important!)\n[..]\nout_unreg:\nevent_hist_unregister(.., data) {\ncmd_ops-\u003eunreg(.., data, ..) [hist_unregister_trigger()] {\nlist_for_each_entry(iter, \u0026file-\u003etriggers, list) {\nif (!hist_trigger_match(data, iter, named_data, false))   \u003c- never matches\ncontinue;\n[..]\ntest = iter;\n}\nif (test \u0026\u0026 test-\u003eops-\u003efree) \u003c\u003c\u003c-- test is NULL\ntest-\u003eops-\u003efree(test) [event_hist_trigger_free()] {\n[..]\nif (data-\u003ename)\ndel_named_trigger(data) {\nlist_del(\u0026data-\u003enamed_list);  \u003c\u003c\u003c\u003c-- NEVER gets removed!\n}\n}\n}\n}\n[..]\nkfree(data); \u003c\u003c\u003c-- frees item but it is still on list\nThe next time a hist with name is registered, it causes an u-a-f bug and\nthe kernel can crash.\nMove the code around such that if event_trigger_register() succeeds, the\nnext thing called is hist_trigger_enable() which adds it to the list.\nA bunch of actions is called if get_named_trigger_data() returns false.\nBut that doesn't need to be called after event_trigger_register(), so it\ncan be moved up, allowing event_trigger_register() to be called just\nbefore hist_trigger_enable() keeping them together and allowing the\nfile-\u003etriggers to be properly populated."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2025-21899\nhttps://nvd.nist.gov/vuln/detail/CVE-2025-21899\nhttps://lore.kernel.org/linux-cve-announce/2025040132-CVE-2025-21899-bf75@gregkh/T"
  ]
}