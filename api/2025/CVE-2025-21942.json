{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2025-04-01T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: zoned: fix extent range end unlock in cow_file_range()",
    "id": "2356650",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2356650"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2025-21942",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: zoned: fix extent range end unlock in cow_file_range()\nRunning generic/751 on the for-next branch often results in a hang like\nbelow. They are both stack by locking an extent. This suggests someone\nforget to unlock an extent.\nINFO: task kworker/u128:1:12 blocked for more than 323 seconds.\nNot tainted 6.13.0-BTRFS-ZNS+ #503\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:kworker/u128:1  state:D stack:0     pid:12    tgid:12    ppid:2      flags:0x00004000\nWorkqueue: btrfs-fixup btrfs_work_helper [btrfs]\nCall Trace:\n\u003cTASK\u003e\n__schedule+0x534/0xdd0\nschedule+0x39/0x140\n__lock_extent+0x31b/0x380 [btrfs]\n? __pfx_autoremove_wake_function+0x10/0x10\nbtrfs_writepage_fixup_worker+0xf1/0x3a0 [btrfs]\nbtrfs_work_helper+0xff/0x480 [btrfs]\n? lock_release+0x178/0x2c0\nprocess_one_work+0x1ee/0x570\n? srso_return_thunk+0x5/0x5f\nworker_thread+0x1d1/0x3b0\n? __pfx_worker_thread+0x10/0x10\nkthread+0x10b/0x230\n? __pfx_kthread+0x10/0x10\nret_from_fork+0x30/0x50\n? __pfx_kthread+0x10/0x10\nret_from_fork_asm+0x1a/0x30\n\u003c/TASK\u003e\nINFO: task kworker/u134:0:184 blocked for more than 323 seconds.\nNot tainted 6.13.0-BTRFS-ZNS+ #503\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:kworker/u134:0  state:D stack:0     pid:184   tgid:184   ppid:2      flags:0x00004000\nWorkqueue: writeback wb_workfn (flush-btrfs-4)\nCall Trace:\n\u003cTASK\u003e\n__schedule+0x534/0xdd0\nschedule+0x39/0x140\n__lock_extent+0x31b/0x380 [btrfs]\n? __pfx_autoremove_wake_function+0x10/0x10\nfind_lock_delalloc_range+0xdb/0x260 [btrfs]\nwritepage_delalloc+0x12f/0x500 [btrfs]\n? srso_return_thunk+0x5/0x5f\nextent_write_cache_pages+0x232/0x840 [btrfs]\nbtrfs_writepages+0x72/0x130 [btrfs]\ndo_writepages+0xe7/0x260\n? srso_return_thunk+0x5/0x5f\n? lock_acquire+0xd2/0x300\n? srso_return_thunk+0x5/0x5f\n? find_held_lock+0x2b/0x80\n? wbc_attach_and_unlock_inode.part.0+0x102/0x250\n? wbc_attach_and_unlock_inode.part.0+0x102/0x250\n__writeback_single_inode+0x5c/0x4b0\nwriteback_sb_inodes+0x22d/0x550\n__writeback_inodes_wb+0x4c/0xe0\nwb_writeback+0x2f6/0x3f0\nwb_workfn+0x32a/0x510\nprocess_one_work+0x1ee/0x570\n? srso_return_thunk+0x5/0x5f\nworker_thread+0x1d1/0x3b0\n? __pfx_worker_thread+0x10/0x10\nkthread+0x10b/0x230\n? __pfx_kthread+0x10/0x10\nret_from_fork+0x30/0x50\n? __pfx_kthread+0x10/0x10\nret_from_fork_asm+0x1a/0x30\n\u003c/TASK\u003e\nThis happens because we have another success path for the zoned mode. When\nthere is no active zone available, btrfs_reserve_extent() returns\n-EAGAIN. In this case, we have two reactions.\n(1) If the given range is never allocated, we can only wait for someone\nto finish a zone, so wait on BTRFS_FS_NEED_ZONE_FINISH bit and retry\nafterward.\n(2) Or, if some allocations are already done, we must bail out and let\nthe caller to send IOs for the allocation. This is because these IOs\nmay be necessary to finish a zone.\nThe commit 06f364284794 (\"btrfs: do proper folio cleanup when\ncow_file_range() failed\") moved the unlock code from the inside of the\nloop to the outside. So, previously, the allocated extents are unlocked\njust after the allocation and so before returning from the function.\nHowever, they are no longer unlocked on the case (2) above. That caused\nthe hang issue.\nFix the issue by modifying the 'end' to the end of the allocated\nrange. Then, we can exit the loop and the same unlock code can properly\nhandle the case."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2025-21942\nhttps://nvd.nist.gov/vuln/detail/CVE-2025-21942\nhttps://lore.kernel.org/linux-cve-announce/2025040135-CVE-2025-21942-2957@gregkh/T"
  ]
}