{
  "mitigation": "Mitigation for this issue is either not available or the currently available options do not meet the Red Hat Product Security criteria comprising ease of use and deployment, applicability to widespread installation base, or stability.",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-08-22T00:00:00Z",
  "bugzilla": {
    "description": "kernel: RDMA/cma: Do not change route.addr.src_addr outside state checks",
    "id": "2307178",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2307178"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-416",
  "statement": "Red Hat Enterprise Linux is not vulnerable to this CVE, as it does not affect the versions or configurations of the Linux kernel used in its distributions.",
  "acknowledgement": "",
  "name": "CVE-2022-48925",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nRDMA/cma: Do not change route.addr.src_addr outside state checks\nIf the state is not idle then resolve_prepare_src() should immediately\nfail and no change to global state should happen. However, it\nunconditionally overwrites the src_addr trying to build a temporary any\naddress.\nFor instance if the state is already RDMA_CM_LISTEN then this will corrupt\nthe src_addr and would cause the test in cma_cancel_operation():\nif (cma_any_addr(cma_src_addr(id_priv)) \u0026\u0026 !id_priv-\u003ecma_dev)\nWhich would manifest as this trace from syzkaller:\nBUG: KASAN: use-after-free in __list_add_valid+0x93/0xa0 lib/list_debug.c:26\nRead of size 8 at addr ffff8881546491e0 by task syz-executor.1/32204\nCPU: 1 PID: 32204 Comm: syz-executor.1 Not tainted 5.12.0-rc8-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n__dump_stack lib/dump_stack.c:79 [inline]\ndump_stack+0x141/0x1d7 lib/dump_stack.c:120\nprint_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232\n__kasan_report mm/kasan/report.c:399 [inline]\nkasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416\n__list_add_valid+0x93/0xa0 lib/list_debug.c:26\n__list_add include/linux/list.h:67 [inline]\nlist_add_tail include/linux/list.h:100 [inline]\ncma_listen_on_all drivers/infiniband/core/cma.c:2557 [inline]\nrdma_listen+0x787/0xe00 drivers/infiniband/core/cma.c:3751\nucma_listen+0x16a/0x210 drivers/infiniband/core/ucma.c:1102\nucma_write+0x259/0x350 drivers/infiniband/core/ucma.c:1732\nvfs_write+0x28e/0xa30 fs/read_write.c:603\nksys_write+0x1ee/0x250 fs/read_write.c:658\ndo_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\nentry_SYSCALL_64_after_hwframe+0x44/0xae\nThis is indicating that an rdma_id_private was destroyed without doing\ncma_cancel_listens().\nInstead of trying to re-use the src_addr memory to indirectly create an\nany address derived from the dst build one explicitly on the stack and\nbind to that as any other normal flow would do. rdma_bind_addr() will copy\nit over the src_addr once it knows the state is valid.\nThis is similar to commit bc0bdc5afaa7 (\"RDMA/cma: Do not change\nroute.addr.src_addr.ss_family\")",
    "A vulnerability in the Linux kernel's RDMA/cma subsystem was resolved, where the `src_addr` (source address) was incorrectly modified outside of proper state checks, leading to potential corruption during RDMA operations. If the system was in a non-idle state, such as `RDMA_CM_LISTEN`, this caused a use-after-free error."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-48925\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-48925\nhttps://lore.kernel.org/linux-cve-announce/2024082220-CVE-2022-48925-b53a@gregkh/T"
  ]
}