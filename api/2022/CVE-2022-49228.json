{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2025-02-26T00:00:00Z",
  "bugzilla": {
    "description": "kernel: bpf: Fix a btf decl_tag bug when tagging a function",
    "id": "2348300",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2348300"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-49228",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Fix a btf decl_tag bug when tagging a function\nsyzbot reported a btf decl_tag bug with stack trace below:\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 0 PID: 3592 Comm: syz-executor914 Not tainted 5.16.0-syzkaller-11424-gb7892f7d5cb2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:btf_type_vlen include/linux/btf.h:231 [inline]\nRIP: 0010:btf_decl_tag_resolve+0x83e/0xaa0 kernel/bpf/btf.c:3910\n...\nCall Trace:\n\u003cTASK\u003e\nbtf_resolve+0x251/0x1020 kernel/bpf/btf.c:4198\nbtf_check_all_types kernel/bpf/btf.c:4239 [inline]\nbtf_parse_type_sec kernel/bpf/btf.c:4280 [inline]\nbtf_parse kernel/bpf/btf.c:4513 [inline]\nbtf_new_fd+0x19fe/0x2370 kernel/bpf/btf.c:6047\nbpf_btf_load kernel/bpf/syscall.c:4039 [inline]\n__sys_bpf+0x1cbb/0x5970 kernel/bpf/syscall.c:4679\n__do_sys_bpf kernel/bpf/syscall.c:4738 [inline]\n__se_sys_bpf kernel/bpf/syscall.c:4736 [inline]\n__x64_sys_bpf+0x75/0xb0 kernel/bpf/syscall.c:4736\ndo_syscall_x64 arch/x86/entry/common.c:50 [inline]\ndo_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\nentry_SYSCALL_64_after_hwframe+0x44/0xae\nThe kasan error is triggered with an illegal BTF like below:\ntype 0: void\ntype 1: int\ntype 2: decl_tag to func type 3\ntype 3: func to func_proto type 8\nThe total number of types is 4 and the type 3 is illegal\nsince its func_proto type is out of range.\nCurrently, the target type of decl_tag can be struct/union, var or func.\nBoth struct/union and var implemented their own 'resolve' callback functions\nand hence handled properly in kernel.\nBut func type doesn't have 'resolve' callback function. When\nbtf_decl_tag_resolve() tries to check func type, it tries to get\nvlen of its func_proto type, which triggered the above kasan error.\nTo fix the issue, btf_decl_tag_resolve() needs to do btf_func_check()\nbefore trying to accessing func_proto type.\nIn the current implementation, func type is checked with\nbtf_func_check() in the main checking function btf_check_all_types().\nTo fix the above kasan issue, let us implement 'resolve' callback\nfunc type properly. The 'resolve' callback will be also called\nin btf_check_all_types() for func types."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-49228\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-49228\nhttps://lore.kernel.org/linux-cve-announce/2025022622-CVE-2022-49228-f915@gregkh/T"
  ]
}