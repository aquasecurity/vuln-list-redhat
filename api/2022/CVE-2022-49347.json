{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-02-26T00:00:00Z",
  "bugzilla": {
    "description": "kernel: ext4: fix bug_on in ext4_writepages",
    "id": "2347821",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2347821"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-49347",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\next4: fix bug_on in ext4_writepages\nwe got issue as follows:\nEXT4-fs error (device loop0): ext4_mb_generate_buddy:1141: group 0, block bitmap and bg descriptor inconsistent: 25 vs 31513 free cls\n------------[ cut here ]------------\nkernel BUG at fs/ext4/inode.c:2708!\ninvalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 2 PID: 2147 Comm: rep Not tainted 5.18.0-rc2-next-20220413+ #155\nRIP: 0010:ext4_writepages+0x1977/0x1c10\nRSP: 0018:ffff88811d3e7880 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000001 RCX: ffff88811c098000\nRDX: 0000000000000000 RSI: ffff88811c098000 RDI: 0000000000000002\nRBP: ffff888128140f50 R08: ffffffffb1ff6387 R09: 0000000000000000\nR10: 0000000000000007 R11: ffffed10250281ea R12: 0000000000000001\nR13: 00000000000000a4 R14: ffff88811d3e7bb8 R15: ffff888128141028\nFS:  00007f443aed9740(0000) GS:ffff8883aef00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020007200 CR3: 000000011c2a4000 CR4: 00000000000006e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\ndo_writepages+0x130/0x3a0\nfilemap_fdatawrite_wbc+0x83/0xa0\nfilemap_flush+0xab/0xe0\next4_alloc_da_blocks+0x51/0x120\n__ext4_ioctl+0x1534/0x3210\n__x64_sys_ioctl+0x12c/0x170\ndo_syscall_64+0x3b/0x90\nIt may happen as follows:\n1. write inline_data inode\nvfs_write\nnew_sync_write\next4_file_write_iter\next4_buffered_write_iter\ngeneric_perform_write\next4_da_write_begin\next4_da_write_inline_data_begin -\u003e If inline data size too\nsmall will allocate block to write, then mapping will has\ndirty page\next4_da_convert_inline_data_to_extent -\u003eclear EXT4_STATE_MAY_INLINE_DATA\n2. fallocate\ndo_vfs_ioctl\nioctl_preallocate\nvfs_fallocate\next4_fallocate\next4_convert_inline_data\next4_convert_inline_data_nolock\next4_map_blocks -\u003e fail will goto restore data\next4_restore_inline_data\next4_create_inline_data\next4_write_inline_data\next4_set_inode_state -\u003e set inode EXT4_STATE_MAY_INLINE_DATA\n3. writepages\n__ext4_ioctl\next4_alloc_da_blocks\nfilemap_flush\nfilemap_fdatawrite_wbc\ndo_writepages\next4_writepages\nif (ext4_has_inline_data(inode))\nBUG_ON(ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA))\nThe root cause of this issue is we destory inline data until call\next4_writepages under delay allocation mode.  But there maybe already\nconvert from inline to extent.  To solve this issue, we call\nfilemap_flush first.."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-49347\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-49347\nhttps://lore.kernel.org/linux-cve-announce/2025022642-CVE-2022-49347-6ba6@gregkh/T"
  ]
}