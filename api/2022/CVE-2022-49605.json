{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-02-26T00:00:00Z",
  "bugzilla": {
    "description": "kernel: igc: Reinstate IGC_REMOVED logic and implement it properly",
    "id": "2348215",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2348215"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-49605",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nigc: Reinstate IGC_REMOVED logic and implement it properly\nThe initially merged version of the igc driver code (via commit\n146740f9abc4, \"igc: Add support for PF\") contained the following\nIGC_REMOVED checks in the igc_rd32/wr32() MMIO accessors:\nu32 igc_rd32(struct igc_hw *hw, u32 reg)\n{\nu8 __iomem *hw_addr = READ_ONCE(hw-\u003ehw_addr);\nu32 value = 0;\nif (IGC_REMOVED(hw_addr))\nreturn ~value;\nvalue = readl(\u0026hw_addr[reg]);\n/* reads should not return all F's */\nif (!(~value) \u0026\u0026 (!reg || !(~readl(hw_addr))))\nhw-\u003ehw_addr = NULL;\nreturn value;\n}\nAnd:\n#define wr32(reg, val) \\\ndo { \\\nu8 __iomem *hw_addr = READ_ONCE((hw)-\u003ehw_addr); \\\nif (!IGC_REMOVED(hw_addr)) \\\nwritel((val), \u0026hw_addr[(reg)]); \\\n} while (0)\nE.g. igb has similar checks in its MMIO accessors, and has a similar\nmacro E1000_REMOVED, which is implemented as follows:\n#define E1000_REMOVED(h) unlikely(!(h))\nThese checks serve to detect and take note of an 0xffffffff MMIO read\nreturn from the device, which can be caused by a PCIe link flap or some\nother kind of PCI bus error, and to avoid performing MMIO reads and\nwrites from that point onwards.\nHowever, the IGC_REMOVED macro was not originally implemented:\n#ifndef IGC_REMOVED\n#define IGC_REMOVED(a) (0)\n#endif /* IGC_REMOVED */\nThis led to the IGC_REMOVED logic to be removed entirely in a\nsubsequent commit (commit 3c215fb18e70, \"igc: remove IGC_REMOVED\nfunction\"), with the rationale that such checks matter only for\nvirtualization and that igc does not support virtualization -- but a\nPCIe device can become detached even without virtualization being in\nuse, and without proper checks, a PCIe bus error affecting an igc\nadapter will lead to various NULL pointer dereferences, as the first\naccess after the error will set hw-\u003ehw_addr to NULL, and subsequent\naccesses will blindly dereference this now-NULL pointer.\nThis patch reinstates the IGC_REMOVED checks in igc_rd32/wr32(), and\nimplements IGC_REMOVED the way it is done for igb, by checking for the\nunlikely() case of hw_addr being NULL.  This change prevents the oopses\nseen when a PCIe link flap occurs on an igc adapter."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-49605\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-49605\nhttps://lore.kernel.org/linux-cve-announce/2025022612-CVE-2022-49605-fef2@gregkh/T"
  ]
}