{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-02-26T00:00:00Z",
  "bugzilla": {
    "description": "kernel: ibmvnic: fix race between xmit and reset",
    "id": "2348046",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2348046"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-49201",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nibmvnic: fix race between xmit and reset\nThere is a race between reset and the transmit paths that can lead to\nibmvnic_xmit() accessing an scrq after it has been freed in the reset\npath. It can result in a crash like:\nKernel attempted to read user page (0) - exploit attempt? (uid: 0)\nBUG: Kernel NULL pointer dereference on read at 0x00000000\nFaulting instruction address: 0xc0080000016189f8\nOops: Kernel access of bad area, sig: 11 [#1]\n...\nNIP [c0080000016189f8] ibmvnic_xmit+0x60/0xb60 [ibmvnic]\nLR [c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\nCall Trace:\n[c008000001618f08] ibmvnic_xmit+0x570/0xb60 [ibmvnic] (unreliable)\n[c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\n[c000000000c9cfcc] sch_direct_xmit+0xec/0x330\n[c000000000bfe640] __dev_xmit_skb+0x3a0/0x9d0\n[c000000000c00ad4] __dev_queue_xmit+0x394/0x730\n[c008000002db813c] __bond_start_xmit+0x254/0x450 [bonding]\n[c008000002db8378] bond_start_xmit+0x40/0xc0 [bonding]\n[c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\n[c000000000c00ca4] __dev_queue_xmit+0x564/0x730\n[c000000000cf97e0] neigh_hh_output+0xd0/0x180\n[c000000000cfa69c] ip_finish_output2+0x31c/0x5c0\n[c000000000cfd244] __ip_queue_xmit+0x194/0x4f0\n[c000000000d2a3c4] __tcp_transmit_skb+0x434/0x9b0\n[c000000000d2d1e0] __tcp_retransmit_skb+0x1d0/0x6a0\n[c000000000d2d984] tcp_retransmit_skb+0x34/0x130\n[c000000000d310e8] tcp_retransmit_timer+0x388/0x6d0\n[c000000000d315ec] tcp_write_timer_handler+0x1bc/0x330\n[c000000000d317bc] tcp_write_timer+0x5c/0x200\n[c000000000243270] call_timer_fn+0x50/0x1c0\n[c000000000243704] __run_timers.part.0+0x324/0x460\n[c000000000243894] run_timer_softirq+0x54/0xa0\n[c000000000ea713c] __do_softirq+0x15c/0x3e0\n[c000000000166258] __irq_exit_rcu+0x158/0x190\n[c000000000166420] irq_exit+0x20/0x40\n[c00000000002853c] timer_interrupt+0x14c/0x2b0\n[c000000000009a00] decrementer_common_virt+0x210/0x220\n--- interrupt: 900 at plpar_hcall_norets_notrace+0x18/0x2c\nThe immediate cause of the crash is the access of tx_scrq in the following\nsnippet during a reset, where the tx_scrq can be either NULL or an address\nthat will soon be invalid:\nibmvnic_xmit()\n{\n...\ntx_scrq = adapter-\u003etx_scrq[queue_num];\ntxq = netdev_get_tx_queue(netdev, queue_num);\nind_bufp = \u0026tx_scrq-\u003eind_buf;\nif (test_bit(0, \u0026adapter-\u003eresetting)) {\n...\n}\nBut beyond that, the call to ibmvnic_xmit() itself is not safe during a\nreset and the reset path attempts to avoid this by stopping the queue in\nibmvnic_cleanup(). However just after the queue was stopped, an in-flight\nibmvnic_complete_tx() could have restarted the queue even as the reset is\nprogressing.\nSince the queue was restarted we could get a call to ibmvnic_xmit() which\ncan then access the bad tx_scrq (or other fields).\nWe cannot however simply have ibmvnic_complete_tx() check the -\u003eresetting\nbit and skip starting the queue. This can race at the \"back-end\" of a good\nreset which just restarted the queue but has not cleared the -\u003eresetting\nbit yet. If we skip restarting the queue due to -\u003eresetting being true,\nthe queue would remain stopped indefinitely potentially leading to transmit\ntimeouts.\nIOW -\u003eresetting is too broad for this purpose. Instead use a new flag\nthat indicates whether or not the queues are active. Only the open/\nreset paths control when the queues are active. ibmvnic_complete_tx()\nand others wake up the queue only if the queue is marked active.\nSo we will have:\nA. reset/open thread in ibmvnic_cleanup() and __ibmvnic_open()\n-\u003eresetting = true\n-\u003etx_queues_active = false\ndisable tx queues\n...\n-\u003etx_queues_active = true\nstart tx queues\nB. Tx interrupt in ibmvnic_complete_tx():\nif (-\u003etx_queues_active)\nnetif_wake_subqueue();\nTo ensure that -\u003etx_queues_active and state of the queues are consistent,\nwe need a lock which:\n- must also be taken in the interrupt path (ibmvnic_complete_tx())\n- shared across the multiple\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-49201\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-49201\nhttps://lore.kernel.org/linux-cve-announce/2025022618-CVE-2022-49201-f972@gregkh/T"
  ]
}