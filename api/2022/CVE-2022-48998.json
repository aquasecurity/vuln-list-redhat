{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-10-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: powerpc/bpf/32: Fix Oops on tail call tests",
    "id": "2320716",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2320716"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-787",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-48998",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\npowerpc/bpf/32: Fix Oops on tail call tests\ntest_bpf tail call tests end up as:\ntest_bpf: #0 Tail call leaf jited:1 85 PASS\ntest_bpf: #1 Tail call 2 jited:1 111 PASS\ntest_bpf: #2 Tail call 3 jited:1 145 PASS\ntest_bpf: #3 Tail call 4 jited:1 170 PASS\ntest_bpf: #4 Tail call load/store leaf jited:1 190 PASS\ntest_bpf: #5 Tail call load/store jited:1\nBUG: Unable to handle kernel data access on write at 0xf1b4e000\nFaulting instruction address: 0xbe86b710\nOops: Kernel access of bad area, sig: 11 [#1]\nBE PAGE_SIZE=4K MMU=Hash PowerMac\nModules linked in: test_bpf(+)\nCPU: 0 PID: 97 Comm: insmod Not tainted 6.1.0-rc4+ #195\nHardware name: PowerMac3,1 750CL 0x87210 PowerMac\nNIP:  be86b710 LR: be857e88 CTR: be86b704\nREGS: f1b4df20 TRAP: 0300   Not tainted  (6.1.0-rc4+)\nMSR:  00009032 \u003cEE,ME,IR,DR,RI\u003e  CR: 28008242  XER: 00000000\nDAR: f1b4e000 DSISR: 42000000\nGPR00: 00000001 f1b4dfe0 c11d2280 00000000 00000000 00000000 00000002 00000000\nGPR08: f1b4e000 be86b704 f1b4e000 00000000 00000000 100d816a f2440000 fe73baa8\nGPR16: f2458000 00000000 c1941ae4 f1fe2248 00000045 c0de0000 f2458030 00000000\nGPR24: 000003e8 0000000f f2458000 f1b4dc90 3e584b46 00000000 f24466a0 c1941a00\nNIP [be86b710] 0xbe86b710\nLR [be857e88] __run_one+0xec/0x264 [test_bpf]\nCall Trace:\n[f1b4dfe0] [00000002] 0x2 (unreliable)\nInstruction dump:\nXXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\nXXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n---[ end trace 0000000000000000 ]---\nThis is a tentative to write above the stack. The problem is encoutered\nwith tests added by commit 38608ee7b690 (\"bpf, tests: Add load store\ntest case for tail call\")\nThis happens because tail call is done to a BPF prog with a different\nstack_depth. At the time being, the stack is kept as is when the caller\ntail calls its callee. But at exit, the callee restores the stack based\non its own properties. Therefore here, at each run, r1 is erroneously\nincreased by 32 - 16 = 16 bytes.\nThis was done that way in order to pass the tail call count from caller\nto callee through the stack. As powerpc32 doesn't have a red zone in\nthe stack, it was necessary the maintain the stack as is for the tail\ncall. But it was not anticipated that the BPF frame size could be\ndifferent.\nLet's take a new approach. Use register r4 to carry the tail call count\nduring the tail call, and save it into the stack at function entry if\nrequired. This means the input parameter must be in r3, which is more\ncorrect as it is a 32 bits parameter, then tail call better match with\nnormal BPF function entry, the down side being that we move that input\nparameter back and forth between r3 and r4. That can be optimised later.\nDoing that also has the advantage of maximising the common parts between\ntail calls and a normal function exit.\nWith the fix, tail call tests are now successfull:\ntest_bpf: #0 Tail call leaf jited:1 53 PASS\ntest_bpf: #1 Tail call 2 jited:1 115 PASS\ntest_bpf: #2 Tail call 3 jited:1 154 PASS\ntest_bpf: #3 Tail call 4 jited:1 165 PASS\ntest_bpf: #4 Tail call load/store leaf jited:1 101 PASS\ntest_bpf: #5 Tail call load/store jited:1 141 PASS\ntest_bpf: #6 Tail call error path, max count reached jited:1 994 PASS\ntest_bpf: #7 Tail call count preserved across function calls jited:1 140975 PASS\ntest_bpf: #8 Tail call error path, NULL target jited:1 110 PASS\ntest_bpf: #9 Tail call error path, index out of range jited:1 69 PASS\ntest_bpf: test_tail_calls: Summary: 10 PASSED, 0 FAILED, [10/10 JIT'ed]"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-48998\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-48998\nhttps://lore.kernel.org/linux-cve-announce/2024102149-CVE-2022-48998-1016@gregkh/T"
  ]
}