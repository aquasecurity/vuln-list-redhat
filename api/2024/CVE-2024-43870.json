{
  "mitigation": "Mitigation for this issue is either not available or the currently available options don't meet the Red Hat Product Security criteria comprising ease of use and deployment, applicability to widespread installation base or stability.",
  "affected_release": [
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "release_date": "2024-11-12T00:00:00Z",
      "advisory": "RHSA-2024:9315",
      "package": "kernel-0:5.14.0-503.11.1.el9_5",
      "cpe": "cpe:/a:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "release_date": "2024-11-12T00:00:00Z",
      "advisory": "RHSA-2024:9315",
      "package": "kernel-0:5.14.0-503.11.1.el9_5",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-08-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: perf: Fix event leak upon exit",
    "id": "2306364",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2306364"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.1",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:H",
    "status": "verified"
  },
  "iava": "",
  "cwe": "CWE-404",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-43870",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nperf: Fix event leak upon exit\nWhen a task is scheduled out, pending sigtrap deliveries are deferred\nto the target task upon resume to userspace via task_work.\nHowever failures while adding an event's callback to the task_work\nengine are ignored. And since the last call for events exit happen\nafter task work is eventually closed, there is a small window during\nwhich pending sigtrap can be queued though ignored, leaking the event\nrefcount addition such as in the following scenario:\nTASK A\n-----\ndo_exit()\nexit_task_work(tsk);\n\u003cIRQ\u003e\nperf_event_overflow()\nevent-\u003epending_sigtrap = pending_id;\nirq_work_queue(\u0026event-\u003epending_irq);\n\u003c/IRQ\u003e\n=========\u003e PREEMPTION: TASK A -\u003e TASK B\nevent_sched_out()\nevent-\u003epending_sigtrap = 0;\natomic_long_inc_not_zero(\u0026event-\u003erefcount)\n// FAILS: task work has exited\ntask_work_add(\u0026event-\u003epending_task)\n[...]\n\u003cIRQ WORK\u003e\nperf_pending_irq()\n// early return: event-\u003eoncpu = -1\n\u003c/IRQ WORK\u003e\n[...]\n=========\u003e TASK B -\u003e TASK A\nperf_event_exit_task(tsk)\nperf_event_exit_event()\nfree_event()\nWARN(atomic_long_cmpxchg(\u0026event-\u003erefcount, 1, 0) != 1)\n// leak event due to unexpected refcount == 2\nAs a result the event is never released while the task exits.\nFix this with appropriate task_work_add()'s error handling.",
    "A logical flaw exists in the Linux kernel.Â  When a task is scheduled, pending sigtrap deliveries are deferred to the target task upon resuming to userspace via task_work. However, failures are ignored while adding an event's callback to the task_work engine. Since the last call for the event exit happens after task work is eventually closed, there is a small window where the pending sigtrap can be queued to be ignored."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-43870\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-43870\nhttps://lore.kernel.org/linux-cve-announce/2024082135-CVE-2024-43870-2b6f@gregkh/T"
  ]
}