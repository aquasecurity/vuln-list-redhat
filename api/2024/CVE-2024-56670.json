{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-12-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: usb: gadget: u_serial: Fix the issue that gs_start_io crashed due to accessing null pointer",
    "id": "2334569",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2334569"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-476",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-56670",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nusb: gadget: u_serial: Fix the issue that gs_start_io crashed due to accessing null pointer\nConsidering that in some extreme cases,\nwhen u_serial driver is accessed by multiple threads,\nThread A is executing the open operation and calling the gs_open,\nThread B is executing the disconnect operation and calling the\ngserial_disconnect function,The port-\u003eport_usb pointer will be set to NULL.\nE.g.\nThread A                                 Thread B\ngs_open()                                gadget_unbind_driver()\ngs_start_io()                            composite_disconnect()\ngs_start_rx()                            gserial_disconnect()\n...                                      ...\nspin_unlock(\u0026port-\u003eport_lock)\nstatus = usb_ep_queue()                  spin_lock(\u0026port-\u003eport_lock)\nspin_lock(\u0026port-\u003eport_lock)              port-\u003eport_usb = NULL\ngs_free_requests(port-\u003eport_usb-\u003ein)     spin_unlock(\u0026port-\u003eport_lock)\nCrash\nThis causes thread A to access a null pointer (port-\u003eport_usb is null)\nwhen calling the gs_free_requests function, causing a crash.\nIf port_usb is NULL, the release request will be skipped as it\nwill be done by gserial_disconnect.\nSo add a null pointer check to gs_start_io before attempting\nto access the value of the pointer port-\u003eport_usb.\nCall trace:\ngs_start_io+0x164/0x25c\ngs_open+0x108/0x13c\ntty_open+0x314/0x638\nchrdev_open+0x1b8/0x258\ndo_dentry_open+0x2c4/0x700\nvfs_open+0x2c/0x3c\npath_openat+0xa64/0xc60\ndo_filp_open+0xb8/0x164\ndo_sys_openat2+0x84/0xf0\n__arm64_sys_openat+0x70/0x9c\ninvoke_syscall+0x58/0x114\nel0_svc_common+0x80/0xe0\ndo_el0_svc+0x1c/0x28\nel0_svc+0x38/0x68"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-56670\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-56670\nhttps://lore.kernel.org/linux-cve-announce/2024122755-CVE-2024-56670-929d@gregkh/T"
  ]
}