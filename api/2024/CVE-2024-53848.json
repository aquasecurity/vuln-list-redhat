{
  "mitigation": "- Users can use --no-cache to disable caching.\n- Users can use --cache-filename to select filenames for use in the cache, or to ensure that other usages do not overwrite the cached schema. (Note: this flag is being deprecated as part of the remediation effort.)\n- Users can explicitly download the schema before use as a local file, as in curl -LOs https://example.org/schema.json; check-jsonschema --schemafile ./schema.json",
  "affected_release": null,
  "package_state": null,
  "threat_severity": "Important",
  "public_date": "2024-11-29T18:39:11Z",
  "bugzilla": {
    "description": "check-jsonschema: check-jsonschema default caching for remote schemas allows for cache confusion",
    "id": "2329542",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2329542"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.1",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-349",
  "statement": "This vulnerability is of significant severity because it directly undermines the integrity of the JSON schema validation process, a important mechanism for ensuring data consistency and security in many applications. By exploiting the cache naming collision, an attacker can inject a malicious schema that bypasses intended validation rules, leading to the acceptance of unauthorized or malformed data. Such a compromise can result in cascading effects, including data corruption, application malfunction, and potential exploitation of downstream systems relying on the validated data. The broad applicability of JSON schema validation across diverse systems amplifies the potential impact, elevating this issue from moderate to a high-severity concern, particularly in environments where schema validation is a key line of defense against invalid or malicious input.",
  "acknowledgement": "",
  "name": "CVE-2024-53848",
  "document_distribution": "",
  "details": [
    "check-jsonschema is a CLI and set of pre-commit hooks for jsonschema validation. The default cache strategy uses the basename of a remote schema as the name of the file in the cache, e.g. `https://example.org/schema.json` will be stored as `schema.json`. This naming allows for conflicts. If an attacker can get a user to run `check-jsonschema` against a malicious schema URL, e.g., `https://example.evil.org/schema.json`, they can insert their own schema into the cache and it will be picked up and used instead of the appropriate schema. Such a cache confusion attack could be used to allow data to pass validation which should have been rejected. This issue has been patched in version 0.30.0. All users are advised to upgrade. A few workarounds exist: 1. Users can use `--no-cache` to disable caching. 2. Users can use `--cache-filename` to select filenames for use in the cache, or to ensure that other usages do not overwrite the cached schema. (Note: this flag is being deprecated as part of the remediation effort.) 3. Users can explicitly download the schema before use as a local file, as in `curl -LOs https://example.org/schema.json; check-jsonschema --schemafile ./schema.json`",
    "A flaw was found in check-jsonschema. The default cache strategy uses the basename of a remote schema as the name of the file in the cache, for example, https://example.org/schema.json, which will be stored as schema.json. This naming allows for conflicts. If an attacker can get a user to run check-jsonschema against a malicious schema URL, e.g., https://example.evil.org/schema.json, they can insert their own schema into the cache, and it will be picked up and used instead of the appropriate schema."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-53848\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-53848\nhttps://github.com/python-jsonschema/check-jsonschema/commit/c52714b85e6725b1b24516fbdedacb333b939152\nhttps://github.com/python-jsonschema/check-jsonschema/security/advisories/GHSA-q6mv-284r-mp36"
  ]
}