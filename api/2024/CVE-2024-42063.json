{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Will not fix",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Will not fix",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Will not fix",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Will not fix",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-07-29T00:00:00Z",
  "bugzilla": {
    "description": "kernel: bpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode",
    "id": "2300501",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2300501"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-120",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-42063",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Mark bpf prog stack with kmsan_unposion_memory in interpreter mode\nsyzbot reported uninit memory usages during map_{lookup,delete}_elem.\n==========\nBUG: KMSAN: uninit-value in __dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\nBUG: KMSAN: uninit-value in dev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n__dev_map_lookup_elem kernel/bpf/devmap.c:441 [inline]\ndev_map_lookup_elem+0xf3/0x170 kernel/bpf/devmap.c:796\n____bpf_map_lookup_elem kernel/bpf/helpers.c:42 [inline]\nbpf_map_lookup_elem+0x5c/0x80 kernel/bpf/helpers.c:38\n___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997\n__bpf_prog_run256+0xb5/0xe0 kernel/bpf/core.c:2237\n==========\nThe reproducer should be in the interpreter mode.\nThe C reproducer is trying to run the following bpf prog:\n0: (18) r0 = 0x0\n2: (18) r1 = map[id:49]\n4: (b7) r8 = 16777216\n5: (7b) *(u64 *)(r10 -8) = r8\n6: (bf) r2 = r10\n7: (07) r2 += -229\n^^^^^^^^^^\n8: (b7) r3 = 8\n9: (b7) r4 = 0\n10: (85) call dev_map_lookup_elem#1543472\n11: (95) exit\nIt is due to the \"void *key\" (r2) passed to the helper. bpf allows uninit\nstack memory access for bpf prog with the right privileges. This patch\nuses kmsan_unpoison_memory() to mark the stack as initialized.\nThis should address different syzbot reports on the uninit \"void *key\"\nargument during map_{lookup,delete}_elem."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-42063\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-42063\nhttps://lore.kernel.org/linux-cve-announce/2024072950-CVE-2024-42063-d3a5@gregkh/T"
  ]
}