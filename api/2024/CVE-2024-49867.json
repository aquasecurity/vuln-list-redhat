{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-10-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: wait for fixup workers before stopping cleaner kthread during umount",
    "id": "2320519",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2320519"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-416",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-49867",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: wait for fixup workers before stopping cleaner kthread during umount\nDuring unmount, at close_ctree(), we have the following steps in this order:\n1) Park the cleaner kthread - this doesn't destroy the kthread, it basically\nhalts its execution (wake ups against it work but do nothing);\n2) We stop the cleaner kthread - this results in freeing the respective\nstruct task_struct;\n3) We call btrfs_stop_all_workers() which waits for any jobs running in all\nthe work queues and then free the work queues.\nSyzbot reported a case where a fixup worker resulted in a crash when doing\na delayed iput on its inode while attempting to wake up the cleaner at\nbtrfs_add_delayed_iput(), because the task_struct of the cleaner kthread\nwas already freed. This can happen during unmount because we don't wait\nfor any fixup workers still running before we call kthread_stop() against\nthe cleaner kthread, which stops and free all its resources.\nFix this by waiting for any fixup workers at close_ctree() before we call\nkthread_stop() against the cleaner and run pending delayed iputs.\nThe stack traces reported by syzbot were the following:\nBUG: KASAN: slab-use-after-free in __lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065\nRead of size 8 at addr ffff8880272a8a18 by task kworker/u8:3/52\nCPU: 1 UID: 0 PID: 52 Comm: kworker/u8:3 Not tainted 6.12.0-rc1-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nWorkqueue: btrfs-fixup btrfs_work_helper\nCall Trace:\n\u003cTASK\u003e\n__dump_stack lib/dump_stack.c:94 [inline]\ndump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\nprint_address_description mm/kasan/report.c:377 [inline]\nprint_report+0x169/0x550 mm/kasan/report.c:488\nkasan_report+0x143/0x180 mm/kasan/report.c:601\n__lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065\nlock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5825\n__raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]\n_raw_spin_lock_irqsave+0xd5/0x120 kernel/locking/spinlock.c:162\nclass_raw_spinlock_irqsave_constructor include/linux/spinlock.h:551 [inline]\ntry_to_wake_up+0xb0/0x1480 kernel/sched/core.c:4154\nbtrfs_writepage_fixup_worker+0xc16/0xdf0 fs/btrfs/inode.c:2842\nbtrfs_work_helper+0x390/0xc50 fs/btrfs/async-thread.c:314\nprocess_one_work kernel/workqueue.c:3229 [inline]\nprocess_scheduled_works+0xa63/0x1850 kernel/workqueue.c:3310\nworker_thread+0x870/0xd30 kernel/workqueue.c:3391\nkthread+0x2f0/0x390 kernel/kthread.c:389\nret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\nret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\u003c/TASK\u003e\nAllocated by task 2:\nkasan_save_stack mm/kasan/common.c:47 [inline]\nkasan_save_track+0x3f/0x80 mm/kasan/common.c:68\nunpoison_slab_object mm/kasan/common.c:319 [inline]\n__kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:345\nkasan_slab_alloc include/linux/kasan.h:247 [inline]\nslab_post_alloc_hook mm/slub.c:4086 [inline]\nslab_alloc_node mm/slub.c:4135 [inline]\nkmem_cache_alloc_node_noprof+0x16b/0x320 mm/slub.c:4187\nalloc_task_struct_node kernel/fork.c:180 [inline]\ndup_task_struct+0x57/0x8c0 kernel/fork.c:1107\ncopy_process+0x5d1/0x3d50 kernel/fork.c:2206\nkernel_clone+0x223/0x880 kernel/fork.c:2787\nkernel_thread+0x1bc/0x240 kernel/fork.c:2849\ncreate_kthread kernel/kthread.c:412 [inline]\nkthreadd+0x60d/0x810 kernel/kthread.c:765\nret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\nret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\nFreed by task 61:\nkasan_save_stack mm/kasan/common.c:47 [inline]\nkasan_save_track+0x3f/0x80 mm/kasan/common.c:68\nkasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579\npoison_slab_object mm/kasan/common.c:247 [inline]\n__kasan_slab_free+0x59/0x70 mm/kasan/common.c:264\nkasan_slab_free include/linux/kasan.h:230 [inline]\nslab_free_h\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-49867\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-49867\nhttps://lore.kernel.org/linux-cve-announce/2024102113-CVE-2024-49867-b47a@gregkh/T"
  ]
}