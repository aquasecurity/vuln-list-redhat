{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2025-02-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: do proper folio cleanup when run_delalloc_nocow() failed",
    "id": "2348586",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2348586"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-57975",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: do proper folio cleanup when run_delalloc_nocow() failed\n[BUG]\nWith CONFIG_DEBUG_VM set, test case generic/476 has some chance to crash\nwith the following VM_BUG_ON_FOLIO():\nBTRFS error (device dm-3): cow_file_range failed, start 1146880 end 1253375 len 106496 ret -28\nBTRFS error (device dm-3): run_delalloc_nocow failed, start 1146880 end 1253375 len 106496 ret -28\npage: refcount:4 mapcount:0 mapping:00000000592787cc index:0x12 pfn:0x10664\naops:btrfs_aops [btrfs] ino:101 dentry name(?):\"f1774\"\nflags: 0x2fffff80004028(uptodate|lru|private|node=0|zone=2|lastcpupid=0xfffff)\npage dumped because: VM_BUG_ON_FOLIO(!folio_test_locked(folio))\n------------[ cut here ]------------\nkernel BUG at mm/page-writeback.c:2992!\nInternal error: Oops - BUG: 00000000f2000800 [#1] SMP\nCPU: 2 UID: 0 PID: 3943513 Comm: kworker/u24:15 Tainted: G           OE      6.12.0-rc7-custom+ #87\nTainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\nHardware name: QEMU KVM Virtual Machine, BIOS unknown 2/2/2022\nWorkqueue: events_unbound btrfs_async_reclaim_data_space [btrfs]\npc : folio_clear_dirty_for_io+0x128/0x258\nlr : folio_clear_dirty_for_io+0x128/0x258\nCall trace:\nfolio_clear_dirty_for_io+0x128/0x258\nbtrfs_folio_clamp_clear_dirty+0x80/0xd0 [btrfs]\n__process_folios_contig+0x154/0x268 [btrfs]\nextent_clear_unlock_delalloc+0x5c/0x80 [btrfs]\nrun_delalloc_nocow+0x5f8/0x760 [btrfs]\nbtrfs_run_delalloc_range+0xa8/0x220 [btrfs]\nwritepage_delalloc+0x230/0x4c8 [btrfs]\nextent_writepage+0xb8/0x358 [btrfs]\nextent_write_cache_pages+0x21c/0x4e8 [btrfs]\nbtrfs_writepages+0x94/0x150 [btrfs]\ndo_writepages+0x74/0x190\nfilemap_fdatawrite_wbc+0x88/0xc8\nstart_delalloc_inodes+0x178/0x3a8 [btrfs]\nbtrfs_start_delalloc_roots+0x174/0x280 [btrfs]\nshrink_delalloc+0x114/0x280 [btrfs]\nflush_space+0x250/0x2f8 [btrfs]\nbtrfs_async_reclaim_data_space+0x180/0x228 [btrfs]\nprocess_one_work+0x164/0x408\nworker_thread+0x25c/0x388\nkthread+0x100/0x118\nret_from_fork+0x10/0x20\nCode: 910a8021 a90363f7 a9046bf9 94012379 (d4210000)\n---[ end trace 0000000000000000 ]---\n[CAUSE]\nThe first two lines of extra debug messages show the problem is caused\nby the error handling of run_delalloc_nocow().\nE.g. we have the following dirtied range (4K blocksize 4K page size):\n0                 16K                  32K\n|//////////////////////////////////////|\n|  Pre-allocated  |\nAnd the range [0, 16K) has a preallocated extent.\n- Enter run_delalloc_nocow() for range [0, 16K)\nWhich found range [0, 16K) is preallocated, can do the proper NOCOW\nwrite.\n- Enter fallback_to_fow() for range [16K, 32K)\nSince the range [16K, 32K) is not backed by preallocated extent, we\nhave to go COW.\n- cow_file_range() failed for range [16K, 32K)\nSo cow_file_range() will do the clean up by clearing folio dirty,\nunlock the folios.\nNow the folios in range [16K, 32K) is unlocked.\n- Enter extent_clear_unlock_delalloc() from run_delalloc_nocow()\nWhich is called with PAGE_START_WRITEBACK to start page writeback.\nBut folios can only be marked writeback when it's properly locked,\nthus this triggered the VM_BUG_ON_FOLIO().\nFurthermore there is another hidden but common bug that\nrun_delalloc_nocow() is not clearing the folio dirty flags in its error\nhandling path.\nThis is the common bug shared between run_delalloc_nocow() and\ncow_file_range().\n[FIX]\n- Clear folio dirty for range [@start, @cur_offset)\nIntroduce a helper, cleanup_dirty_folios(), which\nwill find and lock the folio in the range, clear the dirty flag and\nstart/end the writeback, with the extra handling for the\n@locked_folio.\n- Introduce a helper to clear folio dirty, start and end writeback\n- Introduce a helper to record the last failed COW range end\nThis is to trace which range we should skip, to avoid double\nunlocking.\n- Skip the failed COW range for the e\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-57975\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-57975\nhttps://lore.kernel.org/linux-cve-announce/2025022633-CVE-2024-57975-e1c7@gregkh/T"
  ]
}