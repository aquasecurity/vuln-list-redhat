{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-12-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: sched/numa: fix memory leak due to the overwritten vma-\u003enumab_state",
    "id": "2334491",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2334491"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-56613",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nsched/numa: fix memory leak due to the overwritten vma-\u003enumab_state\n[Problem Description]\nWhen running the hackbench program of LTP, the following memory leak is\nreported by kmemleak.\n# /opt/ltp/testcases/bin/hackbench 20 thread 1000\nRunning with 20*40 (== 800) tasks.\n# dmesg | grep kmemleak\n...\nkmemleak: 480 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\nkmemleak: 665 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n# cat /sys/kernel/debug/kmemleak\nunreferenced object 0xffff888cd8ca2c40 (size 64):\ncomm \"hackbench\", pid 17142, jiffies 4299780315\nhex dump (first 32 bytes):\nac 74 49 00 01 00 00 00 4c 84 49 00 01 00 00 00  .tI.....L.I.....\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nbacktrace (crc bff18fd4):\n[\u003cffffffff81419a89\u003e] __kmalloc_cache_noprof+0x2f9/0x3f0\n[\u003cffffffff8113f715\u003e] task_numa_work+0x725/0xa00\n[\u003cffffffff8110f878\u003e] task_work_run+0x58/0x90\n[\u003cffffffff81ddd9f8\u003e] syscall_exit_to_user_mode+0x1c8/0x1e0\n[\u003cffffffff81dd78d5\u003e] do_syscall_64+0x85/0x150\n[\u003cffffffff81e0012b\u003e] entry_SYSCALL_64_after_hwframe+0x76/0x7e\n...\nThis issue can be consistently reproduced on three different servers:\n* a 448-core server\n* a 256-core server\n* a 192-core server\n[Root Cause]\nSince multiple threads are created by the hackbench program (along with\nthe command argument 'thread'), a shared vma might be accessed by two or\nmore cores simultaneously. When two or more cores observe that\nvma-\u003enumab_state is NULL at the same time, vma-\u003enumab_state will be\noverwritten.\nAlthough current code ensures that only one thread scans the VMAs in a\nsingle 'numa_scan_period', there might be a chance for another thread\nto enter in the next 'numa_scan_period' while we have not gotten till\nnumab_state allocation [1].\nNote that the command `/opt/ltp/testcases/bin/hackbench 50 process 1000`\ncannot the reproduce the issue. It is verified with 200+ test runs.\n[Solution]\nUse the cmpxchg atomic operation to ensure that only one thread executes\nthe vma-\u003enumab_state assignment.\n[1] https://lore.kernel.org/lkml/1794be3c-358c-4cdc-a43d-a1f841d91ef7@amd.com/"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-56613\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-56613\nhttps://lore.kernel.org/linux-cve-announce/2024122707-CVE-2024-56613-0897@gregkh/T"
  ]
}