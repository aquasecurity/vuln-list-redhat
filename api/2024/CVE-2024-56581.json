{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Important",
  "public_date": "2024-12-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: ref-verify: fix use-after-free after invalid ref action",
    "id": "2334460",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2334460"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-416",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-56581",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: ref-verify: fix use-after-free after invalid ref action\nAt btrfs_ref_tree_mod() after we successfully inserted the new ref entry\n(local variable 'ref') into the respective block entry's rbtree (local\nvariable 'be'), if we find an unexpected action of BTRFS_DROP_DELAYED_REF,\nwe error out and free the ref entry without removing it from the block\nentry's rbtree. Then in the error path of btrfs_ref_tree_mod() we call\nbtrfs_free_ref_cache(), which iterates over all block entries and then\ncalls free_block_entry() for each one, and there we will trigger a\nuse-after-free when we are called against the block entry to which we\nadded the freed ref entry to its rbtree, since the rbtree still points\nto the block entry, as we didn't remove it from the rbtree before freeing\nit in the error path at btrfs_ref_tree_mod(). Fix this by removing the\nnew ref entry from the rbtree before freeing it.\nSyzbot report this with the following stack traces:\nBTRFS error (device loop0 state EA):   Ref action 2, root 5, ref_root 0, parent 8564736, owner 0, offset 0, num_refs 18446744073709551615\n__btrfs_mod_ref+0x7dd/0xac0 fs/btrfs/extent-tree.c:2523\nupdate_ref_for_cow+0x9cd/0x11f0 fs/btrfs/ctree.c:512\nbtrfs_force_cow_block+0x9f6/0x1da0 fs/btrfs/ctree.c:594\nbtrfs_cow_block+0x35e/0xa40 fs/btrfs/ctree.c:754\nbtrfs_search_slot+0xbdd/0x30d0 fs/btrfs/ctree.c:2116\nbtrfs_insert_empty_items+0x9c/0x1a0 fs/btrfs/ctree.c:4314\nbtrfs_insert_empty_item fs/btrfs/ctree.h:669 [inline]\nbtrfs_insert_orphan_item+0x1f1/0x320 fs/btrfs/orphan.c:23\nbtrfs_orphan_add+0x6d/0x1a0 fs/btrfs/inode.c:3482\nbtrfs_unlink+0x267/0x350 fs/btrfs/inode.c:4293\nvfs_unlink+0x365/0x650 fs/namei.c:4469\ndo_unlinkat+0x4ae/0x830 fs/namei.c:4533\n__do_sys_unlinkat fs/namei.c:4576 [inline]\n__se_sys_unlinkat fs/namei.c:4569 [inline]\n__x64_sys_unlinkat+0xcc/0xf0 fs/namei.c:4569\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\nBTRFS error (device loop0 state EA):   Ref action 1, root 5, ref_root 5, parent 0, owner 260, offset 0, num_refs 1\n__btrfs_mod_ref+0x76b/0xac0 fs/btrfs/extent-tree.c:2521\nupdate_ref_for_cow+0x96a/0x11f0\nbtrfs_force_cow_block+0x9f6/0x1da0 fs/btrfs/ctree.c:594\nbtrfs_cow_block+0x35e/0xa40 fs/btrfs/ctree.c:754\nbtrfs_search_slot+0xbdd/0x30d0 fs/btrfs/ctree.c:2116\nbtrfs_lookup_inode+0xdc/0x480 fs/btrfs/inode-item.c:411\n__btrfs_update_delayed_inode+0x1e7/0xb90 fs/btrfs/delayed-inode.c:1030\nbtrfs_update_delayed_inode fs/btrfs/delayed-inode.c:1114 [inline]\n__btrfs_commit_inode_delayed_items+0x2318/0x24a0 fs/btrfs/delayed-inode.c:1137\n__btrfs_run_delayed_items+0x213/0x490 fs/btrfs/delayed-inode.c:1171\nbtrfs_commit_transaction+0x8a8/0x3740 fs/btrfs/transaction.c:2313\nprepare_to_relocate+0x3c4/0x4c0 fs/btrfs/relocation.c:3586\nrelocate_block_group+0x16c/0xd40 fs/btrfs/relocation.c:3611\nbtrfs_relocate_block_group+0x77d/0xd90 fs/btrfs/relocation.c:4081\nbtrfs_relocate_chunk+0x12c/0x3b0 fs/btrfs/volumes.c:3377\n__btrfs_balance+0x1b0f/0x26b0 fs/btrfs/volumes.c:4161\nbtrfs_balance+0xbdc/0x10c0 fs/btrfs/volumes.c:4538\nBTRFS error (device loop0 state EA):   Ref action 2, root 5, ref_root 0, parent 8564736, owner 0, offset 0, num_refs 18446744073709551615\n__btrfs_mod_ref+0x7dd/0xac0 fs/btrfs/extent-tree.c:2523\nupdate_ref_for_cow+0x9cd/0x11f0 fs/btrfs/ctree.c:512\nbtrfs_force_cow_block+0x9f6/0x1da0 fs/btrfs/ctree.c:594\nbtrfs_cow_block+0x35e/0xa40 fs/btrfs/ctree.c:754\nbtrfs_search_slot+0xbdd/0x30d0 fs/btrfs/ctree.c:2116\nbtrfs_lookup_inode+0xdc/0x480 fs/btrfs/inode-item.c:411\n__btrfs_update_delayed_inode+0x1e7/0xb90 fs/btrfs/delayed-inode.c:1030\nbtrfs_update_delayed_i\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-56581\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-56581\nhttps://lore.kernel.org/linux-cve-announce/2024122720-CVE-2024-56581-501d@gregkh/T"
  ]
}