{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-11-09T00:00:00Z",
  "bugzilla": {
    "description": "kernel: bpf: Free dynamically allocated bits in bpf_iter_bits_destroy()",
    "id": "2324883",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2324883"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-401",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-50254",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Free dynamically allocated bits in bpf_iter_bits_destroy()\nbpf_iter_bits_destroy() uses \"kit-\u003enr_bits \u003c= 64\" to check whether the\nbits are dynamically allocated. However, the check is incorrect and may\ncause a kmemleak as shown below:\nunreferenced object 0xffff88812628c8c0 (size 32):\ncomm \"swapper/0\", pid 1, jiffies 4294727320\nhex dump (first 32 bytes):\nb0 c1 55 f5 81 88 ff ff f0 f0 f0 f0 f0 f0 f0 f0  ..U...........\nf0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00 00 00 00 00  ..............\nbacktrace (crc 781e32cc):\n[\u003c00000000c452b4ab\u003e] kmemleak_alloc+0x4b/0x80\n[\u003c0000000004e09f80\u003e] __kmalloc_node_noprof+0x480/0x5c0\n[\u003c00000000597124d6\u003e] __alloc.isra.0+0x89/0xb0\n[\u003c000000004ebfffcd\u003e] alloc_bulk+0x2af/0x720\n[\u003c00000000d9c10145\u003e] prefill_mem_cache+0x7f/0xb0\n[\u003c00000000ff9738ff\u003e] bpf_mem_alloc_init+0x3e2/0x610\n[\u003c000000008b616eac\u003e] bpf_global_ma_init+0x19/0x30\n[\u003c00000000fc473efc\u003e] do_one_initcall+0xd3/0x3c0\n[\u003c00000000ec81498c\u003e] kernel_init_freeable+0x66a/0x940\n[\u003c00000000b119f72f\u003e] kernel_init+0x20/0x160\n[\u003c00000000f11ac9a7\u003e] ret_from_fork+0x3c/0x70\n[\u003c0000000004671da4\u003e] ret_from_fork_asm+0x1a/0x30\nThat is because nr_bits will be set as zero in bpf_iter_bits_next()\nafter all bits have been iterated.\nFix the issue by setting kit-\u003ebit to kit-\u003enr_bits instead of setting\nkit-\u003enr_bits to zero when the iteration completes in\nbpf_iter_bits_next(). In addition, use \"!nr_bits || bits \u003e= nr_bits\" to\ncheck whether the iteration is complete and still use \"nr_bits \u003e 64\" to\nindicate whether bits are dynamically allocated. The \"!nr_bits\" check is\nnecessary because bpf_iter_bits_new() may fail before setting\nkit-\u003enr_bits, and this condition will stop the iteration early instead\nof accessing the zeroed or freed kit-\u003ebits.\nConsidering the initial value of kit-\u003ebits is -1 and the type of\nkit-\u003enr_bits is unsigned int, change the type of kit-\u003enr_bits to int.\nThe potential overflow problem will be handled in the following patch."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-50254\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-50254\nhttps://lore.kernel.org/linux-cve-announce/2024110938-CVE-2024-50254-535a@gregkh/T"
  ]
}