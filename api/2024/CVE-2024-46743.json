{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Will not fix",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Will not fix",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-09-18T00:00:00Z",
  "bugzilla": {
    "description": "kernel: of/irq: Prevent device address out-of-bounds read in interrupt map walk",
    "id": "2313091",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2313091"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-125",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-46743",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nof/irq: Prevent device address out-of-bounds read in interrupt map walk\nWhen of_irq_parse_raw() is invoked with a device address smaller than\nthe interrupt parent node (from #address-cells property), KASAN detects\nthe following out-of-bounds read when populating the initial match table\n(dyndbg=\"func of_irq_parse_* +p\"):\nOF: of_irq_parse_one: dev=/soc@0/picasso/watchdog, index=0\nOF:  parent=/soc@0/pci@878000000000/gpio0@17,0, intsize=2\nOF:  intspec=4\nOF: of_irq_parse_raw: ipar=/soc@0/pci@878000000000/gpio0@17,0, size=2\nOF:  -\u003e addrsize=3\n==================================================================\nBUG: KASAN: slab-out-of-bounds in of_irq_parse_raw+0x2b8/0x8d0\nRead of size 4 at addr ffffff81beca5608 by task bash/764\nCPU: 1 PID: 764 Comm: bash Tainted: G           O       6.1.67-484c613561-nokia_sm_arm64 #1\nHardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.01-12.24.03-dirty 01/01/2023\nCall trace:\ndump_backtrace+0xdc/0x130\nshow_stack+0x1c/0x30\ndump_stack_lvl+0x6c/0x84\nprint_report+0x150/0x448\nkasan_report+0x98/0x140\n__asan_load4+0x78/0xa0\nof_irq_parse_raw+0x2b8/0x8d0\nof_irq_parse_one+0x24c/0x270\nparse_interrupts+0xc0/0x120\nof_fwnode_add_links+0x100/0x2d0\nfw_devlink_parse_fwtree+0x64/0xc0\ndevice_add+0xb38/0xc30\nof_device_add+0x64/0x90\nof_platform_device_create_pdata+0xd0/0x170\nof_platform_bus_create+0x244/0x600\nof_platform_notify+0x1b0/0x254\nblocking_notifier_call_chain+0x9c/0xd0\n__of_changeset_entry_notify+0x1b8/0x230\n__of_changeset_apply_notify+0x54/0xe4\nof_overlay_fdt_apply+0xc04/0xd94\n...\nThe buggy address belongs to the object at ffffff81beca5600\nwhich belongs to the cache kmalloc-128 of size 128\nThe buggy address is located 8 bytes inside of\n128-byte region [ffffff81beca5600, ffffff81beca5680)\nThe buggy address belongs to the physical page:\npage:00000000230d3d03 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1beca4\nhead:00000000230d3d03 order:1 compound_mapcount:0 compound_pincount:0\nflags: 0x8000000000010200(slab|head|zone=2)\nraw: 8000000000010200 0000000000000000 dead000000000122 ffffff810000c300\nraw: 0000000000000000 0000000000200020 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\nMemory state around the buggy address:\nffffff81beca5500: 04 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\nffffff81beca5580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n\u003effffff81beca5600: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n^\nffffff81beca5680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\nffffff81beca5700: 00 00 00 00 00 00 fc fc fc fc fc fc fc fc fc fc\n==================================================================\nOF:  -\u003e got it !\nPrevent the out-of-bounds read by copying the device address into a\nbuffer of sufficient size."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-46743\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-46743\nhttps://lore.kernel.org/linux-cve-announce/2024091835-CVE-2024-46743-f386@gregkh/T"
  ]
}