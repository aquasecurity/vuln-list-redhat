{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-09-13T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: fix a use-after-free when hitting errors inside btrfs_submit_chunk()",
    "id": "2312075",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2312075"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-416",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-46687",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix a use-after-free when hitting errors inside btrfs_submit_chunk()\n[BUG]\nThere is an internal report that KASAN is reporting use-after-free, with\nthe following backtrace:\nBUG: KASAN: slab-use-after-free in btrfs_check_read_bio+0xa68/0xb70 [btrfs]\nRead of size 4 at addr ffff8881117cec28 by task kworker/u16:2/45\nCPU: 1 UID: 0 PID: 45 Comm: kworker/u16:2 Not tainted 6.11.0-rc2-next-20240805-default+ #76\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\nWorkqueue: btrfs-endio btrfs_end_bio_work [btrfs]\nCall Trace:\ndump_stack_lvl+0x61/0x80\nprint_address_description.constprop.0+0x5e/0x2f0\nprint_report+0x118/0x216\nkasan_report+0x11d/0x1f0\nbtrfs_check_read_bio+0xa68/0xb70 [btrfs]\nprocess_one_work+0xce0/0x12a0\nworker_thread+0x717/0x1250\nkthread+0x2e3/0x3c0\nret_from_fork+0x2d/0x70\nret_from_fork_asm+0x11/0x20\nAllocated by task 20917:\nkasan_save_stack+0x37/0x60\nkasan_save_track+0x10/0x30\n__kasan_slab_alloc+0x7d/0x80\nkmem_cache_alloc_noprof+0x16e/0x3e0\nmempool_alloc_noprof+0x12e/0x310\nbio_alloc_bioset+0x3f0/0x7a0\nbtrfs_bio_alloc+0x2e/0x50 [btrfs]\nsubmit_extent_page+0x4d1/0xdb0 [btrfs]\nbtrfs_do_readpage+0x8b4/0x12a0 [btrfs]\nbtrfs_readahead+0x29a/0x430 [btrfs]\nread_pages+0x1a7/0xc60\npage_cache_ra_unbounded+0x2ad/0x560\nfilemap_get_pages+0x629/0xa20\nfilemap_read+0x335/0xbf0\nvfs_read+0x790/0xcb0\nksys_read+0xfd/0x1d0\ndo_syscall_64+0x6d/0x140\nentry_SYSCALL_64_after_hwframe+0x4b/0x53\nFreed by task 20917:\nkasan_save_stack+0x37/0x60\nkasan_save_track+0x10/0x30\nkasan_save_free_info+0x37/0x50\n__kasan_slab_free+0x4b/0x60\nkmem_cache_free+0x214/0x5d0\nbio_free+0xed/0x180\nend_bbio_data_read+0x1cc/0x580 [btrfs]\nbtrfs_submit_chunk+0x98d/0x1880 [btrfs]\nbtrfs_submit_bio+0x33/0x70 [btrfs]\nsubmit_one_bio+0xd4/0x130 [btrfs]\nsubmit_extent_page+0x3ea/0xdb0 [btrfs]\nbtrfs_do_readpage+0x8b4/0x12a0 [btrfs]\nbtrfs_readahead+0x29a/0x430 [btrfs]\nread_pages+0x1a7/0xc60\npage_cache_ra_unbounded+0x2ad/0x560\nfilemap_get_pages+0x629/0xa20\nfilemap_read+0x335/0xbf0\nvfs_read+0x790/0xcb0\nksys_read+0xfd/0x1d0\ndo_syscall_64+0x6d/0x140\nentry_SYSCALL_64_after_hwframe+0x4b/0x53\n[CAUSE]\nAlthough I cannot reproduce the error, the report itself is good enough\nto pin down the cause.\nThe call trace is the regular endio workqueue context, but the\nfree-by-task trace is showing that during btrfs_submit_chunk() we\nalready hit a critical error, and is calling btrfs_bio_end_io() to error\nout.  And the original endio function called bio_put() to free the whole\nbio.\nThis means a double freeing thus causing use-after-free, e.g.:\n1. Enter btrfs_submit_bio() with a read bio\nThe read bio length is 128K, crossing two 64K stripes.\n2. The first run of btrfs_submit_chunk()\n2.1 Call btrfs_map_block(), which returns 64K\n2.2 Call btrfs_split_bio()\nNow there are two bios, one referring to the first 64K, the other\nreferring to the second 64K.\n2.3 The first half is submitted.\n3. The second run of btrfs_submit_chunk()\n3.1 Call btrfs_map_block(), which by somehow failed\nNow we call btrfs_bio_end_io() to handle the error\n3.2 btrfs_bio_end_io() calls the original endio function\nWhich is end_bbio_data_read(), and it calls bio_put() for the\noriginal bio.\nNow the original bio is freed.\n4. The submitted first 64K bio finished\nNow we call into btrfs_check_read_bio() and tries to advance the bio\niter.\nBut since the original bio (thus its iter) is already freed, we\ntrigger the above use-after free.\nAnd even if the memory is not poisoned/corrupted, we will later call\nthe original endio function, causing a double freeing.\n[FIX]\nInstead of calling btrfs_bio_end_io(), call btrfs_orig_bbio_end_io(),\nwhich has the extra check on split bios and do the pr\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-46687\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-46687\nhttps://lore.kernel.org/linux-cve-announce/2024091338-CVE-2024-46687-5668@gregkh/T"
  ]
}