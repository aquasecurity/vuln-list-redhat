{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-10-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: send: fix buffer overflow detection when copying path to cache entry",
    "id": "2320578",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2320578"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-120",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-49869",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: send: fix buffer overflow detection when copying path to cache entry\nStarting with commit c0247d289e73 (\"btrfs: send: annotate struct\nname_cache_entry with __counted_by()\") we annotated the variable length\narray \"name\" from the name_cache_entry structure with __counted_by() to\nimprove overflow detection. However that alone was not correct, because\nthe length of that array does not match the \"name_len\" field - it matches\nthat plus 1 to include the NUL string terminator, so that makes a\nfortified kernel think there's an overflow and report a splat like this:\nstrcpy: detected buffer overflow: 20 byte write of buffer size 19\nWARNING: CPU: 3 PID: 3310 at __fortify_report+0x45/0x50\nCPU: 3 UID: 0 PID: 3310 Comm: btrfs Not tainted 6.11.0-prnet #1\nHardware name: CompuLab Ltd.  sbc-ihsw/Intense-PC2 (IPC2), BIOS IPC2_3.330.7 X64 03/15/2018\nRIP: 0010:__fortify_report+0x45/0x50\nCode: 48 8b 34 (...)\nRSP: 0018:ffff97ebc0d6f650 EFLAGS: 00010246\nRAX: 7749924ef60fa600 RBX: ffff8bf5446a521a RCX: 0000000000000027\nRDX: 00000000ffffdfff RSI: ffff97ebc0d6f548 RDI: ffff8bf84e7a1cc8\nRBP: ffff8bf548574080 R08: ffffffffa8c40e10 R09: 0000000000005ffd\nR10: 0000000000000004 R11: ffffffffa8c70e10 R12: ffff8bf551eef400\nR13: 0000000000000000 R14: 0000000000000013 R15: 00000000000003a8\nFS:  00007fae144de8c0(0000) GS:ffff8bf84e780000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fae14691690 CR3: 00000001027a2003 CR4: 00000000001706f0\nCall Trace:\n\u003cTASK\u003e\n? __warn+0x12a/0x1d0\n? __fortify_report+0x45/0x50\n? report_bug+0x154/0x1c0\n? handle_bug+0x42/0x70\n? exc_invalid_op+0x1a/0x50\n? asm_exc_invalid_op+0x1a/0x20\n? __fortify_report+0x45/0x50\n__fortify_panic+0x9/0x10\n__get_cur_name_and_parent+0x3bc/0x3c0\nget_cur_path+0x207/0x3b0\nsend_extent_data+0x709/0x10d0\n? find_parent_nodes+0x22df/0x25d0\n? mas_nomem+0x13/0x90\n? mtree_insert_range+0xa5/0x110\n? btrfs_lru_cache_store+0x5f/0x1e0\n? iterate_extent_inodes+0x52d/0x5a0\nprocess_extent+0xa96/0x11a0\n? __pfx_lookup_backref_cache+0x10/0x10\n? __pfx_store_backref_cache+0x10/0x10\n? __pfx_iterate_backrefs+0x10/0x10\n? __pfx_check_extent_item+0x10/0x10\nchanged_cb+0x6fa/0x930\n? tree_advance+0x362/0x390\n? memcmp_extent_buffer+0xd7/0x160\nsend_subvol+0xf0a/0x1520\nbtrfs_ioctl_send+0x106b/0x11d0\n? __pfx___clone_root_cmp_sort+0x10/0x10\n_btrfs_ioctl_send+0x1ac/0x240\nbtrfs_ioctl+0x75b/0x850\n__se_sys_ioctl+0xca/0x150\ndo_syscall_64+0x85/0x160\n? __count_memcg_events+0x69/0x100\n? handle_mm_fault+0x1327/0x15c0\n? __se_sys_rt_sigprocmask+0xf1/0x180\n? syscall_exit_to_user_mode+0x75/0xa0\n? do_syscall_64+0x91/0x160\n? do_user_addr_fault+0x21d/0x630\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7fae145eeb4f\nCode: 00 48 89 (...)\nRSP: 002b:00007ffdf1cb09b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 0000000000000004 RCX: 00007fae145eeb4f\nRDX: 00007ffdf1cb0ad0 RSI: 0000000040489426 RDI: 0000000000000004\nRBP: 00000000000078fe R08: 00007fae144006c0 R09: 00007ffdf1cb0927\nR10: 0000000000000008 R11: 0000000000000246 R12: 00007ffdf1cb1ce8\nR13: 0000000000000003 R14: 000055c499fab2e0 R15: 0000000000000004\n\u003c/TASK\u003e\nFix this by not storing the NUL string terminator since we don't actually\nneed it for name cache entries, this way \"name_len\" corresponds to the\nactual size of the \"name\" array. This requires marking the \"name\" array\nfield with __nonstring and using memcpy() instead of strcpy() as\nrecommended by the guidelines at:\nhttps://github.com/KSPP/linux/issues/90"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-49869\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-49869\nhttps://lore.kernel.org/linux-cve-announce/2024102114-CVE-2024-49869-f804@gregkh/T"
  ]
}