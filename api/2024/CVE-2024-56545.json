{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-12-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: HID: hyperv: streamline driver probe to avoid devres issues",
    "id": "2334488",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2334488"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-404",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-56545",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nHID: hyperv: streamline driver probe to avoid devres issues\nIt was found that unloading 'hid_hyperv' module results in a devres\ncomplaint:\n...\nhv_vmbus: unregistering driver hid_hyperv\n------------[ cut here ]------------\nWARNING: CPU: 2 PID: 3983 at drivers/base/devres.c:691 devres_release_group+0x1f2/0x2c0\n...\nCall Trace:\n\u003cTASK\u003e\n? devres_release_group+0x1f2/0x2c0\n? __warn+0xd1/0x1c0\n? devres_release_group+0x1f2/0x2c0\n? report_bug+0x32a/0x3c0\n? handle_bug+0x53/0xa0\n? exc_invalid_op+0x18/0x50\n? asm_exc_invalid_op+0x1a/0x20\n? devres_release_group+0x1f2/0x2c0\n? devres_release_group+0x90/0x2c0\n? rcu_is_watching+0x15/0xb0\n? __pfx_devres_release_group+0x10/0x10\nhid_device_remove+0xf5/0x220\ndevice_release_driver_internal+0x371/0x540\n? klist_put+0xf3/0x170\nbus_remove_device+0x1f1/0x3f0\ndevice_del+0x33f/0x8c0\n? __pfx_device_del+0x10/0x10\n? cleanup_srcu_struct+0x337/0x500\nhid_destroy_device+0xc8/0x130\nmousevsc_remove+0xd2/0x1d0 [hid_hyperv]\ndevice_release_driver_internal+0x371/0x540\ndriver_detach+0xc5/0x180\nbus_remove_driver+0x11e/0x2a0\n? __mutex_unlock_slowpath+0x160/0x5e0\nvmbus_driver_unregister+0x62/0x2b0 [hv_vmbus]\n...\nAnd the issue seems to be that the corresponding devres group is not\nallocated. Normally, devres_open_group() is called from\n__hid_device_probe() but Hyper-V HID driver overrides 'hid_dev-\u003edriver'\nwith 'mousevsc_hid_driver' stub and basically re-implements\n__hid_device_probe() by calling hid_parse() and hid_hw_start() but not\ndevres_open_group(). hid_device_probe() does not call __hid_device_probe()\nfor it. Later, when the driver is removed, hid_device_remove() calls\ndevres_release_group() as it doesn't check whether hdev-\u003edriver was\ninitially overridden or not.\nThe issue seems to be related to the commit 62c68e7cee33 (\"HID: ensure\ntimely release of driver-allocated resources\") but the commit itself seems\nto be correct.\nFix the issue by dropping the 'hid_dev-\u003edriver' override and using\nhid_register_driver()/hid_unregister_driver() instead. Alternatively, it\nwould have been possible to rely on the default handling but\nHID_CONNECT_DEFAULT implies HID_CONNECT_HIDRAW and it doesn't seem to work\nfor mousevsc as-is."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-56545\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-56545\nhttps://lore.kernel.org/linux-cve-announce/2024122728-CVE-2024-56545-0bfa@gregkh/T"
  ]
}