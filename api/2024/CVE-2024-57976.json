{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2025-02-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: do proper folio cleanup when cow_file_range() failed",
    "id": "2348637",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2348637"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-57976",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: do proper folio cleanup when cow_file_range() failed\n[BUG]\nWhen testing with COW fixup marked as BUG_ON() (this is involved with the\nnew pin_user_pages*() change, which should not result new out-of-band\ndirty pages), I hit a crash triggered by the BUG_ON() from hitting COW\nfixup path.\nThis BUG_ON() happens just after a failed btrfs_run_delalloc_range():\nBTRFS error (device dm-2): failed to run delalloc range, root 348 ino 405 folio 65536 submit_bitmap 6-15 start 90112 len 106496: -28\n------------[ cut here ]------------\nkernel BUG at fs/btrfs/extent_io.c:1444!\nInternal error: Oops - BUG: 00000000f2000800 [#1] SMP\nCPU: 0 UID: 0 PID: 434621 Comm: kworker/u24:8 Tainted: G           OE      6.12.0-rc7-custom+ #86\nHardware name: QEMU KVM Virtual Machine, BIOS unknown 2/2/2022\nWorkqueue: events_unbound btrfs_async_reclaim_data_space [btrfs]\npc : extent_writepage_io+0x2d4/0x308 [btrfs]\nlr : extent_writepage_io+0x2d4/0x308 [btrfs]\nCall trace:\nextent_writepage_io+0x2d4/0x308 [btrfs]\nextent_writepage+0x218/0x330 [btrfs]\nextent_write_cache_pages+0x1d4/0x4b0 [btrfs]\nbtrfs_writepages+0x94/0x150 [btrfs]\ndo_writepages+0x74/0x190\nfilemap_fdatawrite_wbc+0x88/0xc8\nstart_delalloc_inodes+0x180/0x3b0 [btrfs]\nbtrfs_start_delalloc_roots+0x174/0x280 [btrfs]\nshrink_delalloc+0x114/0x280 [btrfs]\nflush_space+0x250/0x2f8 [btrfs]\nbtrfs_async_reclaim_data_space+0x180/0x228 [btrfs]\nprocess_one_work+0x164/0x408\nworker_thread+0x25c/0x388\nkthread+0x100/0x118\nret_from_fork+0x10/0x20\nCode: aa1403e1 9402f3ef aa1403e0 9402f36f (d4210000)\n---[ end trace 0000000000000000 ]---\n[CAUSE]\nThat failure is mostly from cow_file_range(), where we can hit -ENOSPC.\nAlthough the -ENOSPC is already a bug related to our space reservation\ncode, let's just focus on the error handling.\nFor example, we have the following dirty range [0, 64K) of an inode,\nwith 4K sector size and 4K page size:\n0        16K        32K       48K       64K\n|///////////////////////////////////////|\n|#######################################|\nWhere |///| means page are still dirty, and |###| means the extent io\ntree has EXTENT_DELALLOC flag.\n- Enter extent_writepage() for page 0\n- Enter btrfs_run_delalloc_range() for range [0, 64K)\n- Enter cow_file_range() for range [0, 64K)\n- Function btrfs_reserve_extent() only reserved one 16K extent\nSo we created extent map and ordered extent for range [0, 16K)\n0        16K        32K       48K       64K\n|////////|//////////////////////////////|\n|\u003c- OE -\u003e|##############################|\nAnd range [0, 16K) has its delalloc flag cleared.\nBut since we haven't yet submit any bio, involved 4 pages are still\ndirty.\n- Function btrfs_reserve_extent() returns with -ENOSPC\nNow we have to run error cleanup, which will clear all\nEXTENT_DELALLOC* flags and clear the dirty flags for the remaining\nranges:\n0        16K        32K       48K       64K\n|////////|                              |\n|        |                              |\nNote that range [0, 16K) still has its pages dirty.\n- Some time later, writeback is triggered again for the range [0, 16K)\nsince the page range still has dirty flags.\n- btrfs_run_delalloc_range() will do nothing because there is no\nEXTENT_DELALLOC flag.\n- extent_writepage_io() finds page 0 has no ordered flag\nWhich falls into the COW fixup path, triggering the BUG_ON().\nUnfortunately this error handling bug dates back to the introduction of\nbtrfs.  Thankfully with the abuse of COW fixup, at least it won't crash\nthe kernel.\n[FIX]\nInstead of immediately unlocking the extent and folios, we keep the extent\nand folios locked until either erroring out or the whole delalloc range\nfinished.\nWhen the whole delalloc range finished without error, we just unlock the\nwhole range with PAGE_SET_ORDERED (and PAGE_UNLOCK for !keep_locked\ncases)\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-57976\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-57976\nhttps://lore.kernel.org/linux-cve-announce/2025022633-CVE-2024-57976-10f5@gregkh/T"
  ]
}