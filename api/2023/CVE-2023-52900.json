{
  "mitigation": "Mitigation for this issue is either not available or the currently available options do not meet the Red Hat Product Security criteria comprising ease of use and deployment, applicability to widespread installation base or stability.",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-08-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: nilfs2: fix general protection fault in nilfs_btree_insert()",
    "id": "2306428",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2306428"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-476",
  "statement": "Red Hat Enterprise Linux is not impacted by this CVE, as the vulnerability in question does not affect the specific versions or configurations of the Linux kernel used in its distributions. This ensures that users of Red Hat Enterprise Linux are not exposed to the potential risks associated with this issue, and no further action or mitigation is necessary for systems running this operating system.",
  "acknowledgement": "",
  "name": "CVE-2023-52900",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nnilfs2: fix general protection fault in nilfs_btree_insert()\nIf nilfs2 reads a corrupted disk image and tries to reads a b-tree node\nblock by calling __nilfs_btree_get_block() against an invalid virtual\nblock address, it returns -ENOENT because conversion of the virtual block\naddress to a disk block address fails.  However, this return value is the\nsame as the internal code that b-tree lookup routines return to indicate\nthat the block being searched does not exist, so functions that operate on\nthat b-tree may misbehave.\nWhen nilfs_btree_insert() receives this spurious 'not found' code from\nnilfs_btree_do_lookup(), it misunderstands that the 'not found' check was\nsuccessful and continues the insert operation using incomplete lookup path\ndata, causing the following crash:\ngeneral protection fault, probably for non-canonical address\n0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n...\nRIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs2/btree.c:418 [inline]\nRIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [inline]\nRIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238\nCode: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89\nff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 \u003c42\u003e 80 3c\n28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02\n...\nCall Trace:\n\u003cTASK\u003e\nnilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [inline]\nnilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147\nnilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c:101\n__block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991\n__block_write_begin fs/buffer.c:2041 [inline]\nblock_write_begin+0x93/0x1e0 fs/buffer.c:2102\nnilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c:261\ngeneric_perform_write+0x2e4/0x5e0 mm/filemap.c:3772\n__generic_file_write_iter+0x176/0x400 mm/filemap.c:3900\ngeneric_file_write_iter+0xab/0x310 mm/filemap.c:3932\ncall_write_iter include/linux/fs.h:2186 [inline]\nnew_sync_write fs/read_write.c:491 [inline]\nvfs_write+0x7dc/0xc50 fs/read_write.c:584\nksys_write+0x177/0x2a0 fs/read_write.c:637\ndo_syscall_x64 arch/x86/entry/common.c:50 [inline]\ndo_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n...\n\u003c/TASK\u003e\nThis patch fixes the root cause of this problem by replacing the error\ncode that __nilfs_btree_get_block() returns on block address conversion\nfailure from -ENOENT to another internal code -EINVAL which means that the\nb-tree metadata is corrupted.\nBy returning -EINVAL, it propagates without glitches, and for all relevant\nb-tree operations, functions in the upper bmap layer output an error\nmessage indicating corrupted b-tree metadata via\nnilfs_bmap_convert_error(), and code -EIO will be eventually returned as\nit should be.",
    "A vulnerability was found in the Linux kernel's nilfs2 file system where improper sanitization checks can result in a general protection fault caused by how the nilfs_btree_insert() function interprets a return value (-ENOENT) from the __nilfs_btree_get_block() function. This return value is used to indicate that a read was attempted against an invalid virtual block address. However, this return value is the same as the internal code that b-tree lookup routines return to indicate that a block being searched does not exist. When nilfs_btree_insert() receives this code from nilfs_btree_do_lookup(), it misinterprets the check as successful and continues the insert operation using the incomplete lookup path, causing the issue. This vulnerability potentially leads to data corruption or system instability."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2023-52900\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-52900\nhttps://lore.kernel.org/linux-cve-announce/2024082112-CVE-2023-52900-32f2@gregkh/T"
  ]
}